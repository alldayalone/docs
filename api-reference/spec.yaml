openapi: 3.0.2
info:
  version: 1.0.0
  title: goLance.com API
  termsOfService: 'https://marketing.golance.com/terms-of-service'
  contact:
    email: info@golance.com
    url: 'https://golance.com/contact'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: >-
      https://res.cloudinary.com/golance/image/upload/v1614944324/marketing_new_ui/goLance_Logo.png
  description: |
    This is a public goLance API.
tags:
  - name: Report/Clients
    description: Client stats and reports
servers:
  - url: 'http://localhost:8100/api/v1'
    description: Dev environment
  - url: 'https://stage.golance.com/api/v1'
    description: Staging environment
  - url: 'https://golance.com/api/v1'
    description: Production environment
paths:
  /activity-codes:
    post:
      tags:
        - Activity codes
      summary: Create activity code
      description: |
        Create activity code
      operationId: createActivityCode
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: FCA-026
                companyId:
                  type: string
                  example: 5a743e30bf0a4c00059bf0c3
                description:
                  type: string
                  example: development
              required:
                - code
                - companyId
                - description
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 61680454799d6069b7adeb8c
                  activityCodeId:
                    type: string
                    example: 5a5f3935a24a7d0005360d3f
        '400':
          description: Bad request
    get:
      tags:
        - Activity codes
      summary: Get activity codes
      description: |
        Returns activity codes
      operationId: getActivityCodes
      security:
        - apiKey: []
      parameters:
        - name: activitySetId
          in: query
          description: Activity set id
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          description: Company id of company which belongs to activity codes
          required: true
          schema:
            type: string
        - name: itemsPerPage
          in: query
          description: Items per page for pagination
          required: false
          schema:
            type: number
            default: 100
        - name: page
          in: query
          description: Page for pagination
          required: false
          schema:
            type: number
            default: 1
        - name: query
          in: query
          description: 'Search string, searching by code & description'
          required: false
          schema:
            type: string
        - name: sortField
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            enum:
              - code
              - description
              - assignedSets
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: statuses
          in: query
          description: Activity code statuses
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - archived
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  activityCodes:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActivityCode'
                  pagination:
                    $ref: '#/components/schemas/Common@pagination'
        '400':
          description: Bad request
  '/activity-codes/:id':
    put:
      tags:
        - Activity codes
      summary: Update activity code
      description: |
        Update activity code
      operationId: updateActivityCode
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: development
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
        '400':
          description: Bad request
  /activity-sets:
    post:
      tags:
        - Activity sets
      summary: Create activity set
      description: |
        Create activity set
      operationId: createActivitySet
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: BA
                companyId:
                  type: string
                  example: 5a743e30bf0a4c00059bf0c3
                description:
                  type: string
                  example: Business analysis
              required:
                - name
                - companyId
                - description
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 61680454799d6069b7adeb8c
                  activitySetId:
                    type: string
                    example: 5a5f3935a24a7d0005360d3f
        '400':
          description: Bad request
    get:
      tags:
        - Activity sets
      summary: Get activity sets
      description: |
        Returns activity sets
      operationId: getActivitySets
      security:
        - apiKey: []
      parameters:
        - name: companyId
          in: query
          description: Company id of company which belongs to activity sets
          required: true
          schema:
            type: string
            example: 5a743e30bf0a4c00059bf0c3
        - name: default
          in: query
          description: >-
            Default set, if true will be reflected in response otherwise not. By
            default all sets are shown.
          required: false
          schema:
            type: boolean
        - name: itemsPerPage
          in: query
          description: Items per page for pagination
          required: false
          schema:
            type: number
            default: 100
        - name: page
          in: query
          description: Page for pagination
          required: false
          schema:
            type: number
            default: 1
        - name: query
          in: query
          description: 'Search string, searching by name & description'
          required: false
          schema:
            type: string
            example: BA
        - name: sortField
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            enum:
              - name
              - description
              - assignedCodes
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: statuses
          in: query
          description: Activity set statuses
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - archived
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  activitySets:
                    type: array
                    items:
                      $ref: '#/components/schemas/ActivitySet'
                  pagination:
                    $ref: '#/components/schemas/Common@pagination'
        '400':
          description: Bad request
  '/activity-sets/:id':
    put:
      tags:
        - Activity sets
      summary: Update activity set
      description: |
        Update activity set
      operationId: updateActivitySet
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: BA
                description:
                  type: string
                  example: Business analysis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
        '400':
          description: Bad request
  /activity-sets/assign:
    put:
      tags:
        - Activity sets
      summary: Assign activity codes to set
      description: |
        Assign activity codes to set
      operationId: assignActivityCodesToSet
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activityCodesIds:
                  type: array
                  items:
                    type: string
                    example: 5a9141617dd5a10007a8aff5
                activitySetsIds:
                  type: array
                  items:
                    type: string
                    example: 5a9141617dd5a10007a8aff5
                companyId:
                  type: string
                  example: 5a743e30bf0a4c00059bf0c3
              required:
                - activityCodesIds
                - activitySetsIds
                - companyId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 5a743e30bf0a4c00059bf0c3
        '400':
          description: Bad request
  '/activity-sets/:id/unassign':
    put:
      tags:
        - Activity sets
      summary: Unassign activity codes from set
      description: |
        Unassign activity codes from set
      operationId: unassignActivityCodesfromSet
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activityCodeId:
                  type: string
                  example: 5a9141617dd5a10007a8aff5
              required:
                - activityCodeId
                - activitySetId
                - companyId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 5a743e30bf0a4c00059bf0c3
        '400':
          description: Bad request
  '/diary/:id':
    put:
      tags:
        - Diary
      summary: Add manual time
      description: |
        Add manual time (creates snapshot)
      operationId: addManualTime
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddManualTimeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 5a743e30bf0a4c00059bf0c3
        '400':
          description: Bad request
  '/diary/:id/updateTask':
    put:
      tags:
        - Diary
      summary: Update manual time
      description: |
        Update manual time (update snapshot)
      operationId: updateManualTime
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddManualTimeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 5a743e30bf0a4c00059bf0c3
        '400':
          description: Bad request
  /reports/client/contracts:
    get:
      tags:
        - Report/Clients
      summary: Get client contracts
      description: |
        Returns a list of contracts that available
        to view on reports page
      operationId: getContractClientReports
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: >-
            Contract clients ids. If nothing is given, the current user will be
            used as employerIds filter. employerIds[] => current user id
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: employerCompanyIds
          in: query
          description: >-
            Contract clients company ids. Depends on
            isAccessToCompanyReportsEnabled user permission. In case user has
            this permission - all companies related to user that intersects
            employerCompanyIds will be taken in account in match as filter.
            Otherwise companies where user is hiring manager intersects with
            passed employerComapnyIds[]
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: paymentType
          in: query
          description: Contract's type
          required: false
          schema:
            type: string
            enum:
              - fixed
              - hourly
            default: hourly
        - name: statuses
          in: query
          description: Contract status
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - closed
                - paused
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimesheetsDetailed@Contract'
        '400':
          description: Bad request
  /reports/client/clients:
    get:
      tags:
        - Report/Clients
      summary: Get clients
      description: |
        Returns a list of clients
      operationId: getClient
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        '400':
          description: Bad request
  /reports/client/timesheets/list:
    get:
      tags:
        - Report/Clients
      summary: Get client timesheets
      description: |
        Returns a list of timesheets
      operationId: getClientTimesheetReport
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: >-
            Contract clients ids. If nothing is given, the current user will be
            used as employerIds filter. employerIds[] => current user id
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: employerCompanyIds
          in: query
          description: >-
            Contract clients company ids. Depends on
            isAccessToCompanyReportsEnabled user permission. In case user has
            this permission - all companies related to user that intersects
            employerCompanyIds will be taken in account in match as filter.
            Otherwise companies where user is hiring manager intersects with
            passed employerComapnyIds[]
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorIds
          in: query
          description: Contracts contractors ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorCompanyIds
          in: query
          description: Contracts contractors company ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: tagIds
          in: query
          description: Contract tags ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract closed date should be
            greater than fromDate
          required: true
          schema:
            type: string
            example: '2018-04-25'
        - name: toDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract start date should be
            less than toDate
          required: false
          schema:
            type: string
            example: '2021-04-14'
        - name: sortField
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            default: contract (contract title)
            enum:
              - contract
              - company
              - team
              - billableAmount
              - dueAmount
              - paidAmount
              - billableMinutes
              - manualMinutes
              - overtimeMinutes
              - trackedMinutes
        - name: sortOrder
          in: query
          description: Sort order (asc / desc)
          required: false
          schema:
            type: string
            default: asc (alphabetical)
        - name: page
          in: query
          description: Pagination page number
          required: false
          schema:
            type: number
            default: 1
        - name: itemsPerPage
          in: query
          description: Items per page for pagination
          required: false
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf: null
                $ref: '#/components/schemas/Timesheets'
        '400':
          description: Bad request
  /reports/client/timesheets/list/csv:
    get:
      tags:
        - Report/Clients
      summary: Export timesheets to CSV
      description: |
        Returns timesheets report in CSV file
      operationId: exportClientTimesheetReport
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: >-
            Contract clients ids. If nothing is given, the current user will be
            used as employerIds filter. employerIds[] => current user id
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: employerCompanyIds
          in: query
          description: >-
            Contract clients company ids. Depends on
            isAccessToCompanyReportsEnabled user permission. In case user has
            this permission - all companies related to user that intersects
            employerCompanyIds will be taken in account in match as filter.
            Otherwise companies where user is hiring manager intersects with
            passed employerComapnyIds[]
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorIds
          in: query
          description: Contracts contractors ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorCompanyIds
          in: query
          description: Contracts contractors company ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: tagIds
          in: query
          description: Contract tags ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: fromDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract closed date should be
            greater than fromDate
          required: true
          schema:
            type: string
            example: '2018-04-25'
        - name: toDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract start date should be
            less than toDate
          required: false
          schema:
            type: string
            example: '2021-04-14'
        - name: sortField
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            default: contract (contract title)
            enum:
              - contract
              - company
              - team
              - billableAmount
              - dueAmount
              - paidAmount
              - billableMinutes
              - manualMinutes
              - overtimeMinutes
              - trackedMinutes
        - name: sortOrder
          in: query
          description: Sort order (asc / desc)
          required: false
          schema:
            type: string
            default: asc (alphabetical)
        - name: page
          in: query
          description: Pagination page number
          required: false
          schema:
            type: number
            default: 1
        - name: itemsPerPage
          in: query
          description: Items per page for pagination
          required: false
          schema:
            type: number
            default: 10
        - name: fields
          in: query
          description: Columns that can be displayed in report
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - contractorName
                - contractorCompany
                - contractorCountry
                - contractName
                - contractLink
                - clientName
                - hiringManager
                - team
                - tags
                - contractStatus
                - weeklyTimeLimit
                - goMeterTime
                - manualTime
                - overtime
                - totalBillableTime
                - paidTime
                - billableAmount
                - paidAmount
                - dueAmount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
              examples:
                Timesheets:
                  value: >-
                    "Contractor\"s Name","Contractor\"s Co  mpany",
                    "Contractor\"s Country","Name Of Contract","Contract Link",
                    "Client Name","Hiring Manager","Team","Tags","Contract
                    Status", "Weekly Time Limit","GoMeter Time","Manual
                    Time","Overtime", "Total Billable Time","Paid
                    Time","Billable Amount","Amount Paid", "Amount Due" "Matthew
                    Murdock","",,"rgswgffdsdsggdfghg",
                    "https://golance.com/contracts/5b56f8c4f513960007f5d6df",
                    "Hermione
                    Granger","","","","closed",,0,300,0,300,300,5000,5000,0
                    "Alesya Kozlyakovskaya", "",,"JobJobJob Settle+Release
                    Payday Advance Test",
                    "https://golance.com/contracts/5b4c97a2e5f3b90008da1470",
                    "Hermione
                    Granger","","","qw","active",,0,240,0,240,240,400,400,0
        '400':
          description: Bad request
  /reports/client/timesheets/detailed:
    get:
      tags:
        - Report/Clients
      summary: Get client detailed timesheets
      description: |
        Returns a list of detailed timesheet
      operationId: getClientDetailedTimesheetReport
      security:
        - apiKey: []
      parameters:
        - name: contractId
          in: query
          description: Contract id
          required: true
          schema:
            type: string
        - name: groupBy
          in: query
          description: Field by which grouping occurs
          required: false
          schema:
            type: string
            enum:
              - date
              - task
            default: task
        - name: fromDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract closed date should be
            greater than fromDate
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract start date should be
            less than toDate
          required: false
          schema:
            type: string
            default: End of the current day
        - name: page
          in: query
          description: number of page
          required: false
          schema:
            type: number
            default: 1
        - name: itemsPerPage
          in: query
          description: Items per page
          schema:
            type: number
            default: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/TimesheetsDetailed@groupByDate'
                  - $ref: '#/components/schemas/TimesheetsDetailed@groupByTask'
        '400':
          description: Bad request
  /reports/client/timesheets/detailed/csv:
    get:
      tags:
        - Report/Clients
      summary: Export detailed timesheets to CSV
      description: |
        Returns timesheets report in CSV file
      operationId: exportClientDetailedTimesheetsReport
      parameters:
        - name: contractId
          in: query
          description: Contract id
          required: true
          schema:
            type: string
        - name: groupBy
          in: query
          description: Field by which grouping occurs
          required: false
          schema:
            type: string
            enum:
              - date
              - task
            default: task
        - name: fromDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract closed date should be
            greater than fromDate
          required: true
          schema:
            type: string
            example: '2018-04-25'
        - name: toDate
          in: query
          description: >-
            Date by which contracts are filtered. Contract start date should be
            less than toDate
          required: false
          schema:
            type: string
            default: End of the current day
        - name: page
          in: query
          description: number of page
          required: false
          schema:
            type: number
            default: 1
        - name: itemsPerPage
          in: query
          description: Items per page for pagination
          required: false
          schema:
            type: number
            default: 10
        - name: fields
          in: query
          description: >-
            Columns that can be displayed in report. E.g. fields =
            ['contractorName', 'contractorLink', 'totalBillableTime']
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - contractorName
                - contractorCompany
                - contractorCountry
                - contractName
                - contractLink
                - clientName
                - hiringManager
                - team
                - tags
                - contractStatus
                - task
                - date
                - activityCode
                - note
                - hourlyRate
                - weeklyTimeLimit
                - goMeterTime
                - manualTime
                - overtime
                - totalBillableTime
                - paidTime
                - billableAmount
                - paidAmount
                - dueAmount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
              examples:
                Timesheets:
                  value: >-
                    "Contractor\"s Name","Contractor\"s Co  mpany",
                    "Contractor\"s Country","Name Of Contract","Contract Link",
                    "Client Name","Hiring Manager","Team","Tags","Contract
                    Status", "Weekly Time Limit","GoMeter Time","Manual
                    Time","Overtime", "Total Billable Time","Paid
                    Time","Billable Amount","Amount Paid", "Amount Due" "Matthew
                    Murdock","",,"rgswgffdsdsggdfghg",
                    "https://golance.com/contracts/5b56f8c4f513960007f5d6df",
                    "Hermione
                    Granger","","","","closed",,0,300,0,300,300,5000,5000,0
                    "Alesya Kozlyakovskaya", "",,"JobJobJob Settle+Release
                    Payday Advance Test",
                    "https://golance.com/contracts/5b4c97a2e5f3b90008da1470",
                    "Hermione
                    Granger","","","qw","active",,0,240,0,240,240,400,400,0
        '400':
          description: Bad request
  /reports/client/milestones:
    get:
      tags:
        - Report/Clients
      summary: Get client milestones
      description: |
        Returns a list of milestones with contracts
      operationId: getClientMilestones
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: >-
            Contract clients ids. If nothing is given, the current user will be
            used as employerIds filter. employerIds[] => current user id
          required: false
          schema:
            type: array
            items:
              type: string
        - name: employerCompanyIds
          in: query
          description: >-
            Contract clients company ids. Depends on
            isAccessToCompanyReportsEnabled user permission. In case user has
            this permission - all companies related to user that intersects
            employerCompanyIds will be taken in account in match as filter.
            Otherwise companies where user is hiring manager intersects with
            passed employerComapnyIds[]
          required: false
          schema:
            type: array
            items:
              type: string
        - name: tagIds
          in: query
          description: Contract tags ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorIds
          in: query
          description: Contractor ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorCompanyIds
          in: query
          description: Contractor company ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: milestoneType
          in: query
          description: Type of milestone
          required: false
          schema:
            type: string
            enum:
              - regular
              - scheduled
        - name: fromDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: End date
          required: false
          schema:
            type: string
            default: End of the current day
        - name: statuses
          in: query
          description: Contract statuses
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - closed
                - paused
        - name: searchQuery
          in: query
          description: search string against names
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grouped@Milestones'
        '400':
          description: Bad request
  /reports/client/milestones/csv:
    get:
      tags:
        - Report/Clients
      summary: Export milestones to CSV
      description: |
        Returns milestones report in CSV file
      operationId: exportClientMilestonesReport
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: >-
            Contract clients ids. If nothing is given, the current user will be
            used as employerIds filter. employerIds[] => current user id
          required: false
          schema:
            type: array
            items:
              type: string
        - name: employerCompanyIds
          in: query
          description: >-
            Contract clients company ids. Depends on
            isAccessToCompanyReportsEnabled user permission. In case user has
            this permission - all companies related to user that intersects
            employerCompanyIds will be taken in account in match as filter.
            Otherwise companies where user is hiring manager intersects with
            passed employerComapnyIds[]
          required: false
          schema:
            type: array
            items:
              type: string
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorIds
          in: query
          description: Contractor ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorCompanyIds
          in: query
          description: Contractor company ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: milestoneType
          in: query
          description: Type of milestone
          required: false
          schema:
            type: string
            enum:
              - regular
              - scheduled
        - name: fromDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: End date
          required: false
          schema:
            type: string
            default: End of the current day
        - name: statuses
          in: query
          description: Contract statuses
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - closed
                - paused
        - name: searchQuery
          in: query
          description: search string against names
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: Columns that can be displayed in report
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - contractorName
                - contractorCompany
                - contractorCountry
                - contractName
                - contractLink
                - clientName
                - hiringManager
                - team
                - tags
                - contractStatus
                - milestoneStatus
                - budget
                - paidAmount
                - fundedDate
                - paidDate
                - milestoneFundedBy
                - milestonePaidBy
                - goLanceFee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
              examples:
                Milestones:
                  value: >-
                    "Contractor/"s Name","Contractor/"s Company","Contractor/"s
                    Country","Name Of Contract","Milestone name","Client
                    name","Hiring Manager","Team","Tags","Contract
                    Status","Milestone Status","Milestone Type","Budget","Amount
                    Paid","Date Funded","Date Paid","Milestone Funded
                    By","Milestone Paid By","goLance Fee" "Milestone
                    Freelancer","Milestone USD 2","5","Milestone
                    Client","",,,"active","paid","regular",500,100,"2021-05-14T14:29:26.114Z","2021-05-14T14:31:25.013Z","Milestone
                    Client","Milestone Freelancer",7.95
        '400':
          description: Bad request
  /reports/client/bonuses:
    get:
      tags:
        - Report/Clients
      summary: Get client bonuses sent
      description: |
        Returns a list of bonuses that available
        to view on reports page
      operationId: getBonusesClientReports
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: Contract clients ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: employerCompanyIds
          in: query
          description: Contract clients company ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorIds
          in: query
          description: Contract freelancer ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorCompanyIds
          in: query
          description: Contract freelancers company ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: tagIds
          in: query
          description: Contract tags ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: statuses
          in: query
          description: Contract status
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - closed
                - paused
        - name: fromDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: End date
          required: false
          schema:
            type: string
            default: End of the current day
        - name: page
          in: query
          description: Pagination page number
          required: false
          schema:
            type: number
            default: 1
        - name: itemsPerPage
          in: query
          description: Items per page
          required: false
          schema:
            type: number
            default: 10
        - name: sortField
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum:
              - contract
              - client
              - team
              - issuer
              - message
              - amount
              - date
            default: date
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bonuses'
        '400':
          description: Bad request
  /reports/client/bonuses/csv:
    get:
      tags:
        - Report/Clients
      summary: Get client bonuses sent csv report
      description: |
        Returns a csv report of bonuses sent by client
      operationId: getBonusesClientReportsCSV
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: Contract clients ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: employerCompanyIds
          in: query
          description: Contract clients company ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorIds
          in: query
          description: Contract freelancer ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorCompanyIds
          in: query
          description: Contract freelancers company ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
        - name: tagIds
          in: query
          description: Contract tags ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: statuses
          in: query
          description: Contract status
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - closed
                - paused
            default:
              - active
              - closed
              - paused
        - name: fromDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: End date
          required: false
          schema:
            type: string
            default: End of the current day
        - name: sortField
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum:
              - contract
              - client
              - team
              - issuer
              - message
              - amount
              - date
            default: date
        - name: sortOrder
          in: query
          description: Sort order
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
        - name: fields
          in: query
          description: Report fields
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - contractorName
                - contractorCompany
                - contractorCountry
                - contractName
                - contractLink
                - contractStatus
                - clientName
                - team
                - tags
                - issuerName
                - message
                - date
                - amount
                - fee
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request
  /reports/client/summary:
    get:
      tags:
        - Report/Clients
      summary: Get client summary info
      description: |
        Returns a list of total paid info
        to view on reports page
      operationId: getSummaryClientReports
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: 'Contract clients ids, should be only current user id'
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: employerCompanyIds
          in: query
          description: Contract clients company ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorIds
          in: query
          description: Contract freelancer ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: contractorCompanyIds
          in: query
          description: Contract freelancers company ids
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
              default: ''
        - name: tagIds
          in: query
          description: Contract tags ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: statuses
          in: query
          description: Contract status
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - closed
                - paused
        - name: fromDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: End date
          required: false
          schema:
            type: string
            default: End of the current day
        - name: page
          in: query
          description: Pagination page number
          required: false
          schema:
            type: number
            default: 1
        - name: itemsPerPage
          in: query
          description: Items per page
          required: false
          schema:
            type: number
            default: 10
        - name: sortField
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum:
              - contract
              - client
              - team
              - timesheets
              - milestones
              - bonuses
              - amount
            default: amount
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
        '400':
          description: Bad request
  /reports/client/summary/csv:
    get:
      tags:
        - Report/Clients
      summary: Get summary csv report
      description: |
        Returns a csv report of client summary information
      operationId: getSummaryClientReportsCSV
      security:
        - apiKey: []
      parameters:
        - name: employerIds
          in: query
          description: Contract clients ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: employerCompanyIds
          in: query
          description: Contract clients company ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorIds
          in: query
          description: Contract freelancer ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: contractorCompanyIds
          in: query
          description: Contract freelancers company ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: teamIds
          in: query
          description: >-
            Clients companies team ids, should belong to companies passed in
            employerCompanyIds
          required: false
          schema:
            type: array
            items:
              type: string
        - name: tagIds
          in: query
          description: Contract tags ids
          required: false
          schema:
            type: array
            items:
              type: string
        - name: statuses
          in: query
          description: Contract status
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - closed
                - paused
            default:
              - active
              - closed
              - paused
        - name: fromDate
          in: query
          description: Start date
          required: true
          schema:
            type: string
        - name: toDate
          in: query
          description: End date
          required: false
          schema:
            type: string
            default: End of the current day
        - name: sortField
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum:
              - contract
              - client
              - team
              - timesheets
              - milestones
              - bonuses
              - amount
            default: amount
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum:
              - desc
              - asc
            default: desc
        - name: fields
          in: query
          description: Report fields
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - contractorName
                - contractorCompany
                - contractorCountry
                - contractName
                - contractLink
                - clientName
                - hiringManagerName
                - team
                - tags
                - contractStatus
                - timesheetsAmount
                - timesheetsMinutes
                - milestonesAmount
                - milestonesCount
                - bonusesAmount
                - bonusesCount
                - totalPaid
                - fee
      responses:
        '200':
          description: OK
          content:
            text/csv:
              schema:
                type: string
        '400':
          description: Bad request
  /reports/transactions:
    get:
      tags:
        - Reports/Transactions
      summary: Get transaction reports
      description: |
        Returns transaction reports
      operationId: getTransactionReports
      security:
        - apiKey: []
      parameters:
        - name: startDate
          in: query
          description: >-
            Date by which transactions reports are filtered. Transaction
            createdOn date should be greater than startDate
          required: false
          schema:
            type: string
            example: '2021-01-01'
        - name: endDate
          in: query
          description: >-
            Date by which transactions reports are filtered. Transaction
            createdOn date should be less than endDate
          required: false
          schema:
            type: string
            example: '2022-01-01'
        - name: employerId
          in: query
          description: Contract employer id
          required: false
          schema:
            type: string
        - name: employerCompanyId
          in: query
          description: Contract employer company id
          required: false
          schema:
            type: string
        - name: chargeId
          in: query
          description: Charge transaction id
          required: false
          schema:
            type: string
        - name: paymentWeekId
          in: query
          description: Payment week id
          required: false
          schema:
            type: string
        - name: onlyUSD
          in: query
          description: Currency
          required: false
          schema:
            type: boolean
        - name: paymentType
          in: query
          description: Currency
          required: false
          schema:
            type: string
            enum:
              - expenses
              - income
        - name: statuses
          in: query
          description: Transaction report statuses
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - declined
                - cancelled
                - failed
                - offered
                - paid
                - pending
                - refunded
                - released
                - transmit
                - unloaded
                - withhold
        - name: types
          in: query
          description: Transaction report types
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - bonus_payment
                - card_verification
                - cashback
                - charge
                - deposit
                - fixed_payment
                - golance_funds_load
                - golance_funds_unload
                - hourly_payment
                - manual_invoice_payment
                - marqeta
                - payday_advance
                - payment_adjustment
                - peer_to_peer_charge
                - peer_to_peer_payment
                - referral_fee
                - withdraw
        - name: itemsPerPage
          in: query
          description: Items per page for pagination
          required: false
          schema:
            type: number
            default: 100
        - name: page
          in: query
          description: Page for pagination
          required: false
          schema:
            type: number
            default: 1
        - name: sortField
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            default: createdOn
            enum:
              - createdOn
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionsReports:
                    type: array
                    items:
                      $ref: '#/components/schemas/PeerToPeer'
        '400':
          description: Bad request
  '/contracts/:id/milestones/:milestoneId/fund':
    post:
      tags:
        - Contract/Milestones
      summary: Fund milestone
      operationId: PostMilestone
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract id
          schema:
            type: string
        - name: milestoneId
          in: path
          required: true
          description: Milestone id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundMilestoneRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 60703971ff64d387de3f8a85
                  milestoneId:
                    type: string
                    example: 60703c92ff64d387de3f8a86
        '400':
          description: Bad request
  '/contracts/:id/milestones/:milestoneId/':
    put:
      tags:
        - Contract/Milestones
      summary: Update milestone
      operationId: PutMilestone
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract id
          schema:
            type: string
        - name: milestoneId
          in: path
          required: true
          description: Milestone id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMilestoneRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 60703971ff64d387de3f8a85
        '400':
          description: Bad request
    delete:
      tags:
        - Contract/Milestones
      summary: Delete milestone
      operationId: DeleteMilestone
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract id
          schema:
            type: string
        - name: milestoneId
          in: path
          required: true
          description: Milestone id
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 60703971ff64d387de3f8a85
        '400':
          description: Bad request
  '/contracts/:id/milestones/:milestoneId/decline-requested-payment':
    post:
      tags:
        - Contract/Milestones
      summary: Decline request payment
      operationId: DeclineMilestone
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract id
          schema:
            type: string
        - name: milestoneId
          in: path
          required: true
          description: Milestone id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                files:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 60703971ff64d387de3f8a85
        '400':
          description: Bad request
  '/contracts/:id/milestones/:milestoneId/pay':
    put:
      tags:
        - Contract/Milestones
      summary: Pay for milestone
      operationId: PayMilestone
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          required: true
          description: Contract id
          schema:
            type: string
        - name: milestoneId
          in: path
          required: true
          description: Milestone id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 325
                paymentMethodId:
                  type: string
                  example: 55e4999083bf0905004cb7ae
              required:
                - amount
                - paymentMethodId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 60703971ff64d387de3f8a85
        '400':
          description: Bad request
  '/contracts/:id/activity-codes-settings':
    put:
      tags:
        - Contracts
      summary: Change activity codes settings
      description: |
        Change activity codes settings (enabled/disabled)
        Set Activity set
      operationId: changeActivityCodesSettings
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
                  example: enabled
                activitySetId:
                  type: string
                  example: 5a743e30bf0a4c00059bf0c3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 5a743e30bf0a4c00059bf0c3
        '400':
          description: Bad request
  '/contracts/:id/invoices':
    get:
      tags:
        - Invoices
      summary: Get invoices for contract
      description: |
        Get invoices for contract
      operationId: getInvoices
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The contract id
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: offset
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoices:
                    type: array
                    items:
                      type: object
                      properties:
                        amount:
                          type: number
                          example: 160
                        createdOn:
                          type: string
                          format: date-time
                          example: '2020-01-28T01:55:49.348.Z'
                        currency:
                          type: string
                          example: USD
                        name:
                          type: string
                          example: Bonus
                        status:
                          type: string
                          example: paid
                        transactionReportId:
                          type: string
                          example: 55c0eda1ba99380600f5d548
                        type:
                          type: object
                          properties:
                            label:
                              type: string
                              example: Bonus
                            value:
                              type: string
                              example: bonus
                        billingPeriod:
                          type: object
                          properties:
                            from:
                              type: string
                              format: date
                              example: '2020-01-06'
                            to:
                              type: string
                              format: date
                              example: '2020-01-13'
                          required:
                            - from
                            - to
                  reportsCount:
                    type: number
                    example: 10
                  totalReportsCount:
                    type: number
                    example: 26
        '400':
          description: Bad request
  /offers/check-contractor:
    post:
      tags:
        - Offers
      summary: Check contractor
      description: |
        Returns contractor
      operationId: checkContractor
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: paralect@gmal.com
              required:
                - email
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      contractor:
                        type: object
                        example: null
                      isHireForbidden:
                        type: boolean
                        example: true
                      forbiddenReason:
                        type: string
                        enum:
                          - exclusive_freelancer
                          - bad_status
                          - null
                        example: bad_status
                  - type: object
                    properties:
                      contractor:
                        $ref: '#/components/schemas/Offer@Contractor'
                      isHireForbidden:
                        type: boolean
                        example: true
                      forbiddenReason:
                        type: string
                        enum:
                          - exclusive_freelancer
                          - bad_status
                          - null
                        example: exclusive_freelancer
  /offers/contractors:
    get:
      tags:
        - Offers
      summary: Find contractor
      description: |
        Returns contractors
      operationId: findContractor
      security:
        - apiKey: []
      parameters:
        - name: query
          in: query
          description: Query string for elastic search
          required: true
          schema:
            type: string
            example: Kat
        - name: page
          in: query
          description: page for pagination
          required: false
          schema:
            type: number
            example: 1
        - name: itemsPerPage
          in: query
          description: items per page for pagination
          required: false
          schema:
            type: number
            example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  contractors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Offer@Contractor'
                  pagination:
                    type: object
                    properties:
                      currentPage:
                        type: number
                        example: 1
                      itemsPerPage:
                        type: number
                        example: 10
                      pagesCount:
                        type: number
                        example: 10
                      totalCount:
                        type: number
                        example: 100
  /offers:
    post:
      tags:
        - Offers
      summary: Create offer
      description: |
        Create offer
      operationId: createOffer
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activitySetId:
                  type: string
                employeeId:
                  type: string
                employeeInvitation:
                  type: object
                  properties:
                    email:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                employerId:
                  type: string
                employerCompanyId:
                  type: string
                teamId:
                  type: string
                jobId:
                  type: string
                closeJobAfterAccept:
                  type: boolean
                proposalId:
                  type: string
                title:
                  type: string
                paymentType:
                  type: string
                weeklyLimit:
                  type: number
                allowWebcamPhotos:
                  type: boolean
                allowManualTime:
                  type: boolean
                allowManualInvoicing:
                  type: boolean
                rate:
                  type: number
                currency:
                  type: string
                budget:
                  type: number
                milestones:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      budget:
                        type: number
                instructions:
                  type: string
                files:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                  offerId:
                    type: string
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create job
      description: |
        Create job
      operationId: createJob
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - required:
                    - name
                    - description
                    - categoryId
                    - subCategoryId
                    - paymentType
                    - visibility
                - $ref: '#/components/schemas/JobBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                  jobId:
                    type: string
  '/jobs/:id':
    put:
      tags:
        - Jobs
      summary: Update job
      description: |
        Update job
      operationId: updateJob
      security:
        - apiKey: []
      parameters:
        - name: id
          in: path
          description: Job to update Id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                  jobId:
                    type: string
  /batch-payments/timesheets/:
    post:
      tags:
        - Batch Payments
      summary: Create batch payment
      description: |
        Calculate batch payment amount for timesheets
      operationId: calculateBatchPaymentAmountForTimesheets
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                referenceId:
                  type: string
                  description: Unique ID provided by 5CA
                  example: uniq-5CA-timesheet-id-12345
                billingPeriod:
                  type: object
                  properties:
                    from:
                      type: string
                      format: date
                      example: '2020-01-06'
                    to:
                      type: string
                      format: date
                      example: '2020-01-13'
                  required:
                    - from
                    - to
                contracts:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 55c0eda1ba99380600f5d548
                      hours:
                        type: number
                        example: 30.66
                      message:
                        type: string
                        description: >-
                          Message field for every contract is optional. If it's
                          not passed, default message will be generated. Default
                          format for message: Hourly payment for $hour hours,
                          $fromBillingPeriod - $toBillingPeriod, rate: $rate
                        example: payment for week 1
                    required:
                      - hours
                      - id
              required:
                - referenceId
                - billingPeriod
                - contracts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  hourlyBatchId:
                    type: string
                    example: 5ced893e968ff50006c5de4d
                  totalAmounts:
                    type: object
                    properties:
                      USD:
                        type: number
                        example: 123456.78
                      EUR:
                        type: number
                        example: 67.12
        '400':
          description: Bad request
  '/batch-payments/timesheets/:hourlyBatchId':
    get:
      tags:
        - Batch Payments
      summary: Get sent timesheet payments
      description: |
        Get sent timesheet payments
      operationId: getSentTimesheetPayments
      security:
        - apiKey: []
      parameters:
        - name: hourlyBatchId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  referenceId:
                    type: string
                    example: uniq-5CA-timesheet-id-12345
                  billingPeriod:
                    type: object
                    properties:
                      from:
                        type: string
                        example: '2019-11-25'
                      to:
                        type: string
                        example: '2019-12-01'
                  status:
                    type: string
                    example: paid
                  contracts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 55c0eda1ba99380600f5d548
                        hours:
                          type: number
                          example: 40.83
                        message:
                          type: string
                          example: >-
                            Hourly payment for 40:50 hours, Nov 25, 2019 - Dec
                            1, 2019, rate: $7.50
                        amount:
                          type: number
                          example: 160
                  totalAmounts:
                    type: object
                    properties:
                      USD:
                        type: number
                        example: 123456.78
                      EUR:
                        type: number
                        example: 67.12
                  createdOn:
                    type: string
                    format: date-time
                    example: '2020-01-28T01:55:49.348.Z'
                  statusChangedOn:
                    type: string
                    format: date-time
                    example: '2020-02-15T12:34:33.432Z'
        '400':
          description: Bad request
  '/batch-payments/timesheets/:hourlyBatchId/accept':
    post:
      tags:
        - Batch Payments
      summary: Accept & Send timesheet payments
      description: |
        Accept & Send timesheet payments
      operationId: acceptSendTimesheetPayments
      security:
        - apiKey: []
      parameters:
        - name: hourlyBatchId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
  /payments/bonus:
    post:
      tags:
        - Payments/Bonuses
      summary: Send bonus
      operationId: SendBonus
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethodId:
                  type: string
                  example: 5c498f237b4b74000610b916
                amount:
                  type: number
                  example: 1000
                forceDuplicate:
                  type: boolean
                  example: false
                contractId:
                  type: string
                  example: 5b5820bc5bdf3300061df54a
                message:
                  type: string
                  example: Merry Christmas
              required:
                - paymentMethodId
                - amount
                - forceDuplicate
                - contractId
                - message
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 61a0a65795426278d1ead28a
        '400':
          description: Bad request
  /payments/bonus/check-duplication:
    post:
      tags:
        - Payments/Bonuses
      summary: Check duplication for bonus
      operationId: CheckDuplicationBonuses
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 1000
                contractId:
                  type: string
                  example: 5b5820bc5bdf3300061df54a
              required:
                - amount
                - contractId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: false
        '400':
          description: Bad request
  /payments/withdrawals:
    post:
      tags:
        - Payments/Withdrawal
      summary: Create withdrawal
      operationId: createWithdrawal
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 12300
                currency:
                  type: string
                  example: USD
                paymentMethodId:
                  type: string
                  example: 5bc5cc9f53918600063b2d03
                forceDuplicate:
                  type: boolean
                  example: true
                metadata:
                  type: object
                  properties:
                    precalculatedWithdrawal:
                      $ref: '#/components/schemas/precalculatedWithdrawal'
                    _signature:
                      type: string
                      example: >-
                        642d27f475add597b23ad05c447c2fb5e1da4fbc8e1f2f82f43838c6244a6d41
                splittedPayment:
                  type: object
                  example: null
              required:
                - amount
                - currency
                - paymentMethodId
                - forceDuplicate
                - metadata
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  commandId:
                    type: string
                    example: 61a0df7d35423c29a2c2d7d4
        '400':
          description: Bad request
  /payments/withdrawals/check-duplication:
    post:
      tags:
        - Payments/Withdrawal
      summary: Check duplication for withdrawal
      operationId: CheckDuplicationWithdrawal
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 12300
                currency:
                  type: string
                  example: USD
                paymentMethodId:
                  type: string
                  example: 5bc5cc9f53918600063b2d03
              required:
                - amount
                - currency
                - paymentMethodId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                    example: true
        '400':
          description: Bad request
  /payments/withdrawals/calculate:
    post:
      tags:
        - Payments/Withdrawal
      summary: Calculate withdrawal
      operationId: calculateWithdrawal
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 12300
                currency:
                  type: string
                  example: USD
                paymentMethodId:
                  type: string
                  example: 5bc5cc9f53918600063b2d03
              required:
                - amount
                - currency
                - paymentMethodId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/precalculatedWithdrawal'
        '400':
          description: Bad request
components:
  securitySchemes:
    apiKey:
      type: http
      description: Bearer authentication by access token
      scheme: bearer
  schemas:
    CreateMilestoneRequest:
      type: object
      properties:
        name:
          type: string
          example: Milestone 1
        instructions:
          type: string
          example: ''
        files:
          type: array
          items:
            type: object
      required:
        - name
    FundMilestoneRequest:
      type: object
      properties:
        amount:
          type: number
          example: 300
        paymentMethodId:
          type: string
          example: 55e4999083bf0905004cb7ae
        payAfterFund:
          type: boolean
          example: true
      required:
        - amount
    AddManualTimeRequest:
      type: object
      properties:
        taskId:
          type: string
          example: 5a743e30bf0a4c00059bf0c3
        taskNote:
          type: string
          example: Daily meeting
        timestamps:
          type: array
          items:
            type: string
            example: 1638140400000
      required:
        - taskId
        - timestamps
    ActivityCode:
      type: object
      properties:
        _id:
          type: string
        code:
          type: string
        description:
          type: string
        companyId:
          type: string
        status:
          type: string
        assignedSets:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              description:
                type: string
    Common@pagination:
      type: object
      properties:
        currentPage:
          type: number
          example: '1'
        itemsPerPage:
          type: number
          example: '100'
        pagesCount:
          type: number
          example: '1'
        totalCount:
          type: number
          example: '47'
        sortField:
          type: string
          example: name
        sortOrder:
          type: string
          example: asc
    ActivitySet:
      type: object
      properties:
        _id:
          type: string
          example: 5a9141617dd5a10007a8aff5
        name:
          type: string
          example: BA
        description:
          type: string
          example: Business analysis
        default:
          type: boolean
          example: true
        companyId:
          type: string
          example: 5a743e30bf0a4c00059bf0c3
        assignedCountractCount:
          type: number
          example: 10
        status:
          type: string
          enum:
            - active
            - archived
          example: active
    assignedCodes:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            example: 5afc47bf30b6aa000779cade
          code:
            type: string
            example: FCA-0026
          description:
            type: string
            example: Development
    TimesheetsDetailed@Contract:
      type: object
      properties:
        _id:
          type: string
        __v:
          type: number
        title:
          type: string
        rate:
          type: number
        budget:
          type: number
        startDate:
          type: string
          example: '2018-04-26'
        hoursBilled:
          type: number
        depositType:
          type: string
        paidTo:
          type: string
          example: '2018-04-26'
        createdOn:
          type: string
          example: '2018-04-26'
        closed:
          type: boolean
        totalCharge:
          type: number
        totalHoursWorked:
          type: number
        allowSubContractors:
          type: boolean
        cashback:
          type: object
        contractorSettings:
          type: object
          properties:
            hideFinances:
              type: boolean
        employerSettings:
          type: object
          properties:
            hideFinances:
              type: boolean
        currency:
          type: string
          example: USD/EUR
    Client:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
        isCompany:
          type: boolean
        teams:
          type: array
    Statistics:
      type: object
      properties:
        trackedMinutes:
          type: number
        manualMinutes:
          type: number
        overtimeMinutes:
          type: number
        billableMinutes:
          type: number
        billableAmount:
          type: number
        paidAmount:
          type: number
        dueAmount:
          type: number
    Timesheets:
      type: object
      properties:
        timesheets:
          type: array
          items:
            type: object
            properties:
              contract:
                description: contract
                type: object
              statistics:
                description: Statistics of specific item
                $ref: '#/components/schemas/Statistics'
        statistics:
          description: Total statistics
          $ref: '#/components/schemas/Statistics'
        pagination:
          type: object
          properties:
            currentPage:
              type: number
            itemsPerPage:
              type: number
            pageCount:
              type: number
            totalCount:
              type: number
            sortField:
              type: string
            sortOrder:
              type: string
    TimesheetsDetailed@groupByDate:
      type: object
      properties:
        timesheets:
          type: array
          items:
            type: object
            properties:
              statistics:
                $ref: '#/components/schemas/Statistics'
              task:
                type: object
              contractId:
                type: string
              note:
                type: string
              items:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    statistics:
                      $ref: '#/components/schemas/Statistics'
        statistics:
          description: Total statistics of all timesheet items
          $ref: '#/components/schemas/Statistics'
        contract:
          $ref: '#/components/schemas/TimesheetsDetailed@Contract'
        pagination:
          type: object
          properties:
            currentPage:
              type: number
            itemsPerPage:
              type: number
            pageCount:
              type: number
            totalCount:
              type: number
            groupBy:
              type: string
    TimesheetsDetailed@groupByTask:
      type: object
      properties:
        timesheets:
          type: array
          items:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    statistics:
                      $ref: '#/components/schemas/Statistics'
                    date:
                      type: string
                      example: '2018-10-24'
              task:
                type: object
              contractId:
                type: string
              note:
                type: string
              statistics:
                $ref: '#/components/schemas/Statistics'
        statistics:
          description: Total statistics of all timesheet items
          $ref: '#/components/schemas/Statistics'
        contract:
          $ref: '#/components/schemas/TimesheetsDetailed@Contract'
        pagination:
          type: object
          properties:
            currentPage:
              type: number
            itemsPerPage:
              type: number
            pageCount:
              type: number
            totalCount:
              type: number
            groupBy:
              type: string
    PaymentRequests:
      type: array
      items:
        type: object
        properties:
          requestedOn:
            type: string
            example: '2021-04-01'
          amount:
            type: number
          files:
            type: array
            items:
              type: object
          message:
            type: string
          revision:
            type: number
          status:
            type: string
    History:
      type: array
      items:
        type: object
        properties:
          issuerId:
            type: string
          type:
            type: string
          createdOn:
            type: string
            example: '2021-04-01T00:00:00.000Z'
    Contract@Person:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatarUrl:
          type: string
    Contract@Company:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
    Contract@Team:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
    Contract:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        employer:
          $ref: '#/components/schemas/Contract@Person'
        employerCompany:
          $ref: '#/components/schemas/Contract@Company'
        contractor:
          $ref: '#/components/schemas/Contract@Person'
        contractorCompany:
          $ref: '#/components/schemas/Contract@Company'
        team:
          $ref: '#/components/schemas/Contract@Team'
    Milestones:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
          name:
            type: string
          budget:
            type: number
          status:
            type: string
          paymentRequests:
            $ref: '#/components/schemas/PaymentRequests'
          paidAmount:
            type: number
          bonus:
            type: number
          instructions:
            type: string
          files:
            type: array
            items: {}
          autoScheduled:
            type: boolean
          scheduledPaymentOn:
            type: string
            example: '2021-04-01'
          updatedOn:
            type: string
            example: '2021-04-01'
          history:
            $ref: '#/components/schemas/History'
          contract:
            $ref: '#/components/schemas/Contract'
          totalCount:
            type: number
            example: 274
    Milestone@Statistics:
      type: object
      properties:
        contractsCount:
          type: number
          example: 2678
        milestonesCount:
          type: number
          example: 67892
        totalChargedAmount:
          type: number
          example: 1372500
        totalSentAmount:
          type: number
          example: 1372500
    Grouped@Milestones:
      type: object
      properties:
        groupedMilestones:
          type: array
          items:
            type: object
            properties:
              group:
                type: string
              milestones:
                $ref: '#/components/schemas/Milestones'
            example:
              - group: initial
                milestones: []
                totalCount: 1
              - group: in-progress
                milestones: []
                totalCount: 1
              - group: approval-required
                milestones: []
                totalCount: 4
              - group: completed
                milestones: []
                totalCount: 7
        statistics:
          $ref: '#/components/schemas/Milestone@Statistics'
    Bonus@Issuer:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        avatarUrl:
          type: string
    Bonus:
      type: object
      properties:
        amount:
          type: number
        message:
          type: string
        sentOn:
          type: string
          example: 2021-05-20T09:32:48.477Z
        contract:
          $ref: '#/components/schemas/Contract'
        issuer:
          $ref: '#/components/schemas/Bonus@Issuer'
    Bonuses@Statistics:
      type: object
      properties:
        contractCount:
          type: number
        bonusesCount:
          type: number
        totalSentAmount:
          type: number
        averageSentAmount:
          type: number
    Bonuses@Pagination:
      type: object
      properties:
        currentPage:
          type: number
        itemsPerPage:
          type: number
          default: 10
        pagesCount:
          type: number
        totalCount:
          type: number
        sortField:
          type: string
          default: date
        sortOrder:
          type: string
          default: desc
    Bonuses:
      type: object
      properties:
        bonuses:
          type: array
          items:
            $ref: '#/components/schemas/Bonus'
        statistics:
          $ref: '#/components/schemas/Bonuses@Statistics'
        pagination:
          $ref: '#/components/schemas/Bonuses@Pagination'
    TotalPaid@Milestones:
      type: object
      properties:
        amount:
          type: number
        count:
          type: number
    TotalPaid@Timesheets:
      type: object
      properties:
        amount:
          type: number
        minutes:
          type: number
    TotalPaid@Bonuses:
      type: object
      properties:
        amount:
          type: number
        count:
          type: number
    TotalPaid:
      type: object
      properties:
        contract:
          $ref: '#/components/schemas/Contract'
        milestones:
          $ref: '#/components/schemas/TotalPaid@Milestones'
        timesheets:
          $ref: '#/components/schemas/TotalPaid@Timesheets'
        bonuses:
          $ref: '#/components/schemas/TotalPaid@Bonuses'
        paidAmount:
          type: number
    Summary@Statistics:
      type: object
      properties:
        timesheetsAmount:
          type: number
        timesheetsMinutes:
          type: number
        milestonesAmount:
          type: number
        milestonesCount:
          type: number
        bonusesAmount:
          type: number
        bonusesCount:
          type: number
        totalAmount:
          type: number
    Summary@Pagination:
      type: object
      properties:
        currentPage:
          type: number
        itemsPerPage:
          type: number
          default: 10
        pagesCount:
          type: number
        totalCount:
          type: number
        sortField:
          type: string
          default: date
        sortOrder:
          type: string
          default: desc
    Summary:
      type: object
      properties:
        totalPaid:
          type: array
          items:
            $ref: '#/components/schemas/TotalPaid'
        statistics:
          $ref: '#/components/schemas/Summary@Statistics'
        pagination:
          $ref: '#/components/schemas/Summary@Pagination'
    PeerToPeer:
      type: object
      properties:
        _id:
          type: string
          example: 61ce00c5dc682f1a881dcfa3
        paymentId:
          type: string
          example: 1954245
        userId:
          type: string
          example: 6061c812065643bfc2172a79
        amount:
          type: number
          example: 100
        currency:
          type: string
          example: USD
        type:
          type: string
          example: peer_to_peer_payment
        status:
          type: string
          example: withhold
        metadata:
          type: object
          properties:
            message:
              type: string
              example: ''
            _clientId:
              type: string
              example: web_app
            charge_id:
              type: number
              example: 1954244
            sender_id:
              type: string
              example: 6061c812065643bfc2172a79
            command_id:
              type: string
              example: 61ce00c525ce96146104e305
            receiver_id:
              type: string
              example: 61ce00c525ce96146104e304
            fee_percentage:
              type: number
              example: 4.9
            receiver_email:
              type: string
              example: asdadas@asdad.com
            canBeRefundedUntil:
              type: string
              example: '2021-12-30T19:06:05Z'
            threadId:
              type: string
              example: 61ce00c525ce96146104e302
            reportId:
              type: string
              example: cee4cac7
            receiver:
              type: object
              properties:
                _id:
                  type: string
                  example: 61ce00c525ce96146104e304
            paymentMethod:
              type: object
              properties:
                _id:
                  type: string
                  example: 60f7fe653d762272e9cb4c54
                type:
                  type: string
                  example: bank_account
                metadata:
                  type: object
                  properties:
                    accountNumber:
                      type: string
                      example: ES792100*********3456789
                    currency:
                      type: string
                      example: EUR
        createdOn:
          type: string
          example: '2021-12-30T18:56:05.201Z'
        paymentType:
          type: string
          example: expenses
        transactions:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                example: 506811
              type:
                type: string
                example: withhold
              amount:
                type: number
                example: 100
              succeed:
                type: boolean
                example: true
              seq_order_no:
                type: number
                example: 1
              createdOn:
                type: string
                example: '2021-12-30T18:56:05.201Z'
    Offer@Contractor:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatarUrl:
          type: string
        headline:
          type: string
        location:
          type: object
          properties:
            country:
              type: object
              properties:
                _id:
                  type: string
                name:
                  type: string
                code:
                  type: string
            postalCode:
              type: string
            city:
              type: string
            addressLine1:
              type: string
            addressLine2:
              type: string
            timezone:
              type: object
              properties:
                name:
                  type: string
                title:
                  type: string
        skills:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
        rate:
          type: number
        feedbackScore:
          type: object
          properties:
            employer:
              type: number
              example: 0
            contractor:
              type: number
              example: 0
            total:
              type: number
              example: 0
        email:
          type: string
          example: p*****.com
    JobBody@Attachment:
      type: object
      required:
        - _id
        - kind
        - mimeType
        - name
        - s3
        - previewable
      properties:
        _id:
          type: string
        kind:
          type: string
        length:
          type: number
        mimeType:
          type: string
        name:
          type: string
        previewable:
          type: boolean
        s3:
          type: object
          required:
            - bucket
            - key
          properties:
            bucket:
              type: string
            key:
              type: string
        size:
          type: object
          properties:
            hUnits:
              type: string
            height:
              type: number
            mime:
              type: string
            type:
              type: string
            wUnits:
              type: string
            width:
              type: number
        thumbnails:
          type: array
          items:
            type: object
    JobBody@Location:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
    JobBody@Skill:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
    JobBody@Question:
      type: object
      required:
        - _id
        - value
      properties:
        _id:
          type: string
        value:
          type: string
    JobBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/JobBody@Attachment'
        categoryId:
          type: string
        subCategoryId:
          type: string
        paymentType:
          type: string
          enum:
            - hourly
            - fixed
        hoursPerWeek:
          type: number
        rate:
          type: number
        budget:
          type: number
        individualFreelancersOnly:
          type: boolean
        locations:
          type: array
          items:
            $ref: '#/components/schemas/JobBody@Location'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/JobBody@Skill'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/JobBody@Question'
        visibility:
          type: string
          enum:
            - public
            - invites-only
        employerCompanyId:
          type: string
        teamId:
          type: string
    precalculatedWithdrawal:
      type: object
      properties:
        amount:
          type: number
          example: 12100
        currency:
          type: string
          example: USD
        destinationCurrency:
          type: string
          example: USD
        destinationCurrencyAmount:
          type: number
          example: 12300
        feeAmount:
          type: number
          example: 200
        paymentService:
          type: string
          example: paypal
        sourceAmount:
          type: number
          example: 12300
        splittedPayment:
          type: object
          example: null
        _signature:
          type: string
          example: 5fede3ce466d1e614f5ff9aaae9189a297f249d51fa82812a3258794a0743483
